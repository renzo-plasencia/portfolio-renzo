import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import FlowDemo from '../components/FlowDemo';
import TimeLine from '../components/TimeLine';
import PACorreos from '../components/PA_Correos';
import '../styles/Markdown.css';

const markdownContent = `
# Power Apps + Power Automate: Creaci√≥n de Aplicaci√≥n Low Code üñ•Ô∏è

Las soluciones low code son las preferidas por las **empresas que buscan agilidad y eficiencia en el desarrollo de aplicaciones**. Adem√°s, permite probar ideas o conceptos de forma r√°pida y escalable con aplicaciones de bajo c√≥digo. En este proyecto busqu√© crear una **soluci√≥n que permit√≠a cargar informaci√≥n de forma autom√°tica** desde **Power Automate** y pasarlo al entorno de **Power Apps** para que sea gestionado.

> **Disclaimer:** Debido a pol√≠ticas de privacidad no puedo colocar detalles o foto del proyecto. Sin embargo, he extra√≠do los puntos principales.

## Objetivo:
- El objetivo principal de esta aplicaci√≥n es cargar informaci√≥n con Power Automate de forma autom√°tica desde un correo Outlook y pasarlo al entorno de Power Apps donde ser√≠a gestionado.
- En Power Apps, se crear√≠an formularios y vistas para mostrar y gestionar la informaci√≥n cargada.
- Se crear√≠an estaciones manejadas por diferentes equipos donde se podr√≠a trackear los tiempos y estados para un futuro an√°lisis.

## Caracter√≠sticas:
- Integraci√≥n de Power Automate con Outlook para la carga autom√°tica de datos.
- La informaci√≥n deber√≠a ser **delegable** porque se contaba con cargas masivas de m√°s de 1000 registros mensuales.
- Se implement√≥ paginaci√≥n para mejorar la experiencia del usuario al gestionar grandes vol√∫menes de datos.
- Se implement√≥ un sistema de alertas con Power Automate a trav√©s de correos electr√≥nicos.

## Proceso:
**1. Se implement√≥ un flujo de trabajo en Power Automate que se activa al recibir un correo electr√≥nico en Outlook.**

El correo electr√≥nico contiene diferentes datos que son procesadas y limpiados en Power Automate. Toda esta informaci√≥n se hace de forma autom√°tica y se env√≠a a Power Apps para su gesti√≥n.
`

const markdownContent3 = `
**2. Se carga a una estaci√≥n inicial, pero pasa por diferentes estaciones donde interact√∫a con diferentes stake holders.**

La informaci√≥n se muestra para su gesti√≥n y pasa por diferentes stakeholders que a√±aden comentarios o informaci√≥n dependiendo de su rol.
`

const markdownContent4 = `
**3. Se configuraron alertas en Power Automate para notificar a los usuarios en diferentes estados.**
`

const markdownContent5 = `
Gracias a este proyecto desarroll√© y mejor√© mis habilidades con aplicaciones low code y flujos en el ambiente de Microsoft. Adem√°s, fue un gran reto el trabajar con una **fuente de datos (Outlook) diferente a las usuales (Excel)** y aprender a integrarla en un flujo de trabajo automatizado.

## Aprendizajes:

1. Conocimiento intermedio para crear aplicaciones low-code/no-code con **Power Automate y Power Apps.**
2. Uso de **delegaci√≥n en Power Apps** para mejorar el rendimiento en la gesti√≥n de datos.
3. Creaci√≥n de **alertas autom√°ticas** desde Power Apps hacia correos personalizados.
4. Implementaci√≥n de **paginaci√≥n** en Power Apps para mejorar la experiencia del usuario al gestionar grandes vol√∫menes de datos.
5. Aprendizaje de la integraci√≥n de **fuentes de datos no convencionales** como Outlook en flujos de trabajo automatizados.
`

const markdownContent6 = `
> Presiona el bot√≥n para simular c√≥mo funciona el flujo de carga desde **Outlook a Power Apps**. Este flujo activa un **Power Automate** cuando llega un correo electr√≥nico.
`

const markdownContent7 =
`> **Inicia el flujo** para simular como los datos pasan de una estaci√≥n a otra.`

export default function PowerApps() {
  return (
    <div className="markdown-container">
      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent}</ReactMarkdown>
      <FlowDemo />
      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent6}</ReactMarkdown>
      <br></br>

      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent3}</ReactMarkdown>
      <TimeLine />
      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent7}</ReactMarkdown>
      <br></br>


      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent4}</ReactMarkdown>
      <PACorreos />
      <ReactMarkdown remarkPlugins={[remarkGfm]}>{markdownContent5}</ReactMarkdown>
    </div>
  )
}
